{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	//	 "prefix": "log",
	//	 "body": [
	//		 "console.log('$1');",
	//		 "$2"
	//	 ],
	//	 "description": "Log output to console"
	// }

	"Action type": {
		"prefix": "at",
		"body": [
			"export type ${1:name} = 'App/${1:name}'",
			"export const ${1:name}: ${1:name} = 'App/${1:name}'",
		],
		"description": "Create a strongly typed action type"
	},

	"Create action and action creator": {
		"prefix": "action",
		"body": [
			"export type ${1/(.*)/${1:/capitalize}/}Action = {",
				"    type: types.${1/([a-z]*)(([A-Z])+([a-z]+))?/${1:/upcase}${2:+_}$3${4:/upcase}/g},",
				"}",
				"",
				"export function ${1}(): ${1/(.*)/${1:/capitalize}/}Action {",
				"    return { type: types.${1/([a-z]*)(([A-Z])+([a-z]+))?/${1:/upcase}${2:+_}$3${4:/upcase}/g} }",
				"}",
		]
	},
}